# 이벤트 발생 제어
- debounce throttle

1. debounce 
 1) 정의 : 이벤트를 그룹화(Grouping)하여, 연이어 호출되는 함수들 중 마지막 함수만 호출하도록 하는 기술입니다. 
             > 출처: https://kellis.tistory.com/142 [Flying Whale:티스토리]
    
 2) 예제 코드
const debounceFunction = (callback, delay) => {
  let timer;
  return (...args) => {
    // 실행한 함수(setTimeout())를 취소
    clearTimeout(timer);
    // delay가 지나면 callback 함수를 실행
    timer = setTimeout(() => callback(...args), delay);
  };
};
>  출처: https://developer-talk.tistory.com/248 [DevStory:티스토리]


2. throttle
1) 정의 : 이벤트를 일정한 주기마다 발생하도록 하는 기술
2) 예제코드 
function throttle(callback, wait) {// callback: 실행 대상인 함수
  let waiting = true;  // true로 주어서 콜백함수가
                        // 처음 한번은 바로 실행되도록 함
  return function() {
    if (waiting) {
      callback();       
      waiting = false;   // false로 바꿔 실행되지 않도록 한다.
      setTimeout(() => {// wait만큼 시간이 지난 후,
        waiting = true;// true로 바뀌면서 다시 실행됨.
      }, wait);
    }
  };  
};
